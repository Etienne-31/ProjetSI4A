Terminals which are not used

   tNE
   tGE
   tLE
   tNOT


Grammar

    0 $accept: Program $end

    1 @1: /* empty */

    2 Program: @1 Function_list

    3 Function_list: Function
    4              | Function_list Function

    5 @2: /* empty */

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE

    7 @3: /* empty */

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 tLBRACE Corps Return_statement tRBRACE

    9 Corps: Declarations Statement_list

   10 Type_specifier: tINT
   11               | tVOID

   12 Parameter_list: /* empty */
   13               | Parameter_declaration
   14               | Parameter_list tCOMMA Parameter_declaration

   15 Parameter_declaration: tINT tID
   16                      | tVOID

   17 Statement_list: Statement
   18               | Statement_list Statement

   19 Statement: Assignement_statement
   20          | Selection_statement
   21          | Function_call
   22          | Iteration_statement
   23          | Print_statement

   24 Function_call: tID tLPAR Arguments tRPAR

   25 Arguments: /* empty */
   26          | Expression
   27          | Expression tCOMMA Arguments

   28 Expression: Expression tADD Expression
   29           | Expression tSUB Expression
   30           | Expression tMUL Expression
   31           | Expression tDIV Expression
   32           | Facteur

   33 Facteur: tNB
   34        | tID
   35        | tLPAR Expression tRPAR

   36 Conditions: Conditions Separator Condition
   37           | Condition

   38 Condition: tLPAR Expression tLT Expression tRPAR
   39          | tLPAR Expression tGT Expression tRPAR
   40          | tLPAR Expression tEQ Expression tRPAR
   41          | Expression tLT Expression
   42          | Expression tGT Expression
   43          | Expression tEQ Expression
   44          | Expression

   45 Separator: tAND
   46          | tOR

   47 Declarations: /* empty */
   48             | Declaration_list

   49 Declaration_list: Declaration_statement
   50                 | Declaration_list Declaration_statement

   51 Declaration_statement: tINT Declaration_int tSEMI
   52                      | tCONST tINT Declaration_const tSEMI

   53 Declaration_const: tID tASSIGN tNB
   54                  | tID tASSIGN tNB tCOMMA Declaration_const

   55 Declaration_int: tID
   56                | tID tASSIGN Expression

   57 @4: /* empty */

   58 Declaration_int: tID tASSIGN Expression @4 tCOMMA Declaration_int
   59                | tID tCOMMA Declaration_int

   60 @5: /* empty */

   61 @6: /* empty */

   62 @7: /* empty */

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement

   64 @8: /* empty */

   65 @9: /* empty */

   66 Else_statement: tELSE @8 tLBRACE @9 Statement_list tRBRACE
   67               | /* empty */

   68 @10: /* empty */

   69 @11: /* empty */

   70 @12: /* empty */

   71 @13: /* empty */

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE

   73 Return_statement: /* empty */
   74                 | tRETURN Expression tSEMI
   75                 | tRETURN tSEMI

   76 Print_statement: tPRINT tLPAR Expression tRPAR tSEMI

   77 Assignement_statement: tID tASSIGN Expression tSEMI
   78                      | tID tASSIGN Function_call tSEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
tINT (258) 10 15 51 52
tVOID (259) 11 16
tCONST (260) 52
tMAIN (261) 6
tRETURN (262) 74 75
tPRINT (263) 76
tADD (264) 28
tSUB (265) 29
tMUL (266) 30
tDIV (267) 31
tLT (268) 38 41
tGT (269) 39 42
tNE (270)
tEQ (271) 40 43
tGE (272)
tLE (273)
tASSIGN (274) 53 54 56 58 77 78
tAND (275) 45
tOR (276) 46
tNOT (277)
tLBRACE (278) 6 8 63 66 72
tRBRACE (279) 6 8 63 66 72
tRPAR (280) 6 8 24 35 38 39 40 63 72 76
tSEMI (281) 51 52 74 75 76 77 78
tCOMMA (282) 14 27 54 58 59
tNB (283) 33 53 54
tIF (284) 63
tLPAR (285) 6 8 24 35 38 39 40 63 72 76
tELSE (286) 66
tWHILE (287) 72
tID (288) 8 15 24 34 53 54 55 56 58 59 77 78


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 2, on right: 0
@1 (36)
    on left: 1, on right: 2
Function_list (37)
    on left: 3 4, on right: 2 4
Function (38)
    on left: 6 8, on right: 3 4
@2 (39)
    on left: 5, on right: 6
@3 (40)
    on left: 7, on right: 8
Corps (41)
    on left: 9, on right: 6 8 63
Type_specifier (42)
    on left: 10 11, on right: 6 8
Parameter_list (43)
    on left: 12 13 14, on right: 6 8 14
Parameter_declaration (44)
    on left: 15 16, on right: 13 14
Statement_list (45)
    on left: 17 18, on right: 9 18 66 72
Statement (46)
    on left: 19 20 21 22 23, on right: 17 18
Function_call (47)
    on left: 24, on right: 21 78
Arguments (48)
    on left: 25 26 27, on right: 24 27
Expression (49)
    on left: 28 29 30 31 32, on right: 26 27 28 29 30 31 35 38 39 40
    41 42 43 44 56 58 74 76 77
Facteur (50)
    on left: 33 34 35, on right: 32
Conditions (51)
    on left: 36 37, on right: 36 63 72
Condition (52)
    on left: 38 39 40 41 42 43 44, on right: 36 37
Separator (53)
    on left: 45 46, on right: 36
Declarations (54)
    on left: 47 48, on right: 9
Declaration_list (55)
    on left: 49 50, on right: 48 50
Declaration_statement (56)
    on left: 51 52, on right: 49 50
Declaration_const (57)
    on left: 53 54, on right: 52 54
Declaration_int (58)
    on left: 55 56 58 59, on right: 51 58 59
@4 (59)
    on left: 57, on right: 58
Selection_statement (60)
    on left: 63, on right: 20
@5 (61)
    on left: 60, on right: 63
@6 (62)
    on left: 61, on right: 63
@7 (63)
    on left: 62, on right: 63
Else_statement (64)
    on left: 66 67, on right: 63
@8 (65)
    on left: 64, on right: 66
@9 (66)
    on left: 65, on right: 66
Iteration_statement (67)
    on left: 72, on right: 22
@10 (68)
    on left: 68, on right: 72
@11 (69)
    on left: 69, on right: 72
@12 (70)
    on left: 70, on right: 72
@13 (71)
    on left: 71, on right: 72
Return_statement (72)
    on left: 73 74 75, on right: 6 8
Print_statement (73)
    on left: 76, on right: 23
Assignement_statement (74)
    on left: 77 78, on right: 19


state 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (@1)

    Program  go to state 1
    @1       go to state 2


state 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


state 2

    2 Program: @1 . Function_list

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    Function_list   go to state 6
    Function        go to state 7
    Type_specifier  go to state 8


state 3

    0 $accept: Program $end .

    $default  accept


state 4

   10 Type_specifier: tINT .

    $default  reduce using rule 10 (Type_specifier)


state 5

   11 Type_specifier: tVOID .

    $default  reduce using rule 11 (Type_specifier)


state 6

    2 Program: @1 Function_list .
    4 Function_list: Function_list . Function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    $default  reduce using rule 2 (Program)

    Function        go to state 9
    Type_specifier  go to state 8


state 7

    3 Function_list: Function .

    $default  reduce using rule 3 (Function_list)


state 8

    6 Function: Type_specifier . tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE
    8         | Type_specifier . tID tLPAR Parameter_list tRPAR @3 tLBRACE Corps Return_statement tRBRACE

    tMAIN  shift, and go to state 10
    tID    shift, and go to state 11


state 9

    4 Function_list: Function_list Function .

    $default  reduce using rule 4 (Function_list)


state 10

    6 Function: Type_specifier tMAIN . @2 tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE

    $default  reduce using rule 5 (@2)

    @2  go to state 12


state 11

    8 Function: Type_specifier tID . tLPAR Parameter_list tRPAR @3 tLBRACE Corps Return_statement tRBRACE

    tLPAR  shift, and go to state 13


state 12

    6 Function: Type_specifier tMAIN @2 . tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE

    tLPAR  shift, and go to state 14


state 13

    8 Function: Type_specifier tID tLPAR . Parameter_list tRPAR @3 tLBRACE Corps Return_statement tRBRACE

    tINT   shift, and go to state 15
    tVOID  shift, and go to state 16

    $default  reduce using rule 12 (Parameter_list)

    Parameter_list         go to state 17
    Parameter_declaration  go to state 18


state 14

    6 Function: Type_specifier tMAIN @2 tLPAR . Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE

    tINT   shift, and go to state 15
    tVOID  shift, and go to state 16

    $default  reduce using rule 12 (Parameter_list)

    Parameter_list         go to state 19
    Parameter_declaration  go to state 18


state 15

   15 Parameter_declaration: tINT . tID

    tID  shift, and go to state 20


state 16

   16 Parameter_declaration: tVOID .

    $default  reduce using rule 16 (Parameter_declaration)


state 17

    8 Function: Type_specifier tID tLPAR Parameter_list . tRPAR @3 tLBRACE Corps Return_statement tRBRACE
   14 Parameter_list: Parameter_list . tCOMMA Parameter_declaration

    tRPAR   shift, and go to state 21
    tCOMMA  shift, and go to state 22


state 18

   13 Parameter_list: Parameter_declaration .

    $default  reduce using rule 13 (Parameter_list)


state 19

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list . tRPAR tLBRACE Corps Return_statement tRBRACE
   14 Parameter_list: Parameter_list . tCOMMA Parameter_declaration

    tRPAR   shift, and go to state 23
    tCOMMA  shift, and go to state 22


state 20

   15 Parameter_declaration: tINT tID .

    $default  reduce using rule 15 (Parameter_declaration)


state 21

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR . @3 tLBRACE Corps Return_statement tRBRACE

    $default  reduce using rule 7 (@3)

    @3  go to state 24


state 22

   14 Parameter_list: Parameter_list tCOMMA . Parameter_declaration

    tINT   shift, and go to state 15
    tVOID  shift, and go to state 16

    Parameter_declaration  go to state 25


state 23

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR . tLBRACE Corps Return_statement tRBRACE

    tLBRACE  shift, and go to state 26


state 24

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 . tLBRACE Corps Return_statement tRBRACE

    tLBRACE  shift, and go to state 27


state 25

   14 Parameter_list: Parameter_list tCOMMA Parameter_declaration .

    $default  reduce using rule 14 (Parameter_list)


state 26

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE . Corps Return_statement tRBRACE

    tINT    shift, and go to state 28
    tCONST  shift, and go to state 29

    $default  reduce using rule 47 (Declarations)

    Corps                  go to state 30
    Declarations           go to state 31
    Declaration_list       go to state 32
    Declaration_statement  go to state 33


state 27

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 tLBRACE . Corps Return_statement tRBRACE

    tINT    shift, and go to state 28
    tCONST  shift, and go to state 29

    $default  reduce using rule 47 (Declarations)

    Corps                  go to state 34
    Declarations           go to state 31
    Declaration_list       go to state 32
    Declaration_statement  go to state 33


state 28

   51 Declaration_statement: tINT . Declaration_int tSEMI

    tID  shift, and go to state 35

    Declaration_int  go to state 36


state 29

   52 Declaration_statement: tCONST . tINT Declaration_const tSEMI

    tINT  shift, and go to state 37


state 30

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE Corps . Return_statement tRBRACE

    tRETURN  shift, and go to state 38

    $default  reduce using rule 73 (Return_statement)

    Return_statement  go to state 39


state 31

    9 Corps: Declarations . Statement_list

    tPRINT  shift, and go to state 40
    tIF     shift, and go to state 41
    tWHILE  shift, and go to state 42
    tID     shift, and go to state 43

    Statement_list         go to state 44
    Statement              go to state 45
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 32

   48 Declarations: Declaration_list .
   50 Declaration_list: Declaration_list . Declaration_statement

    tINT    shift, and go to state 28
    tCONST  shift, and go to state 29

    $default  reduce using rule 48 (Declarations)

    Declaration_statement  go to state 51


state 33

   49 Declaration_list: Declaration_statement .

    $default  reduce using rule 49 (Declaration_list)


state 34

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 tLBRACE Corps . Return_statement tRBRACE

    tRETURN  shift, and go to state 38

    $default  reduce using rule 73 (Return_statement)

    Return_statement  go to state 52


state 35

   55 Declaration_int: tID .
   56                | tID . tASSIGN Expression
   58                | tID . tASSIGN Expression @4 tCOMMA Declaration_int
   59                | tID . tCOMMA Declaration_int

    tASSIGN  shift, and go to state 53
    tCOMMA   shift, and go to state 54

    $default  reduce using rule 55 (Declaration_int)


state 36

   51 Declaration_statement: tINT Declaration_int . tSEMI

    tSEMI  shift, and go to state 55


state 37

   52 Declaration_statement: tCONST tINT . Declaration_const tSEMI

    tID  shift, and go to state 56

    Declaration_const  go to state 57


state 38

   74 Return_statement: tRETURN . Expression tSEMI
   75                 | tRETURN . tSEMI

    tSEMI  shift, and go to state 58
    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 62
    Facteur     go to state 63


state 39

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement . tRBRACE

    tRBRACE  shift, and go to state 64


state 40

   76 Print_statement: tPRINT . tLPAR Expression tRPAR tSEMI

    tLPAR  shift, and go to state 65


state 41

   63 Selection_statement: tIF . tLPAR Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement

    tLPAR  shift, and go to state 66


state 42

   72 Iteration_statement: tWHILE . tLPAR @10 Conditions @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE

    tLPAR  shift, and go to state 67


state 43

   24 Function_call: tID . tLPAR Arguments tRPAR
   77 Assignement_statement: tID . tASSIGN Expression tSEMI
   78                      | tID . tASSIGN Function_call tSEMI

    tASSIGN  shift, and go to state 68
    tLPAR    shift, and go to state 69


state 44

    9 Corps: Declarations Statement_list .
   18 Statement_list: Statement_list . Statement

    tPRINT  shift, and go to state 40
    tIF     shift, and go to state 41
    tWHILE  shift, and go to state 42
    tID     shift, and go to state 43

    $default  reduce using rule 9 (Corps)

    Statement              go to state 70
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 45

   17 Statement_list: Statement .

    $default  reduce using rule 17 (Statement_list)


state 46

   21 Statement: Function_call .

    $default  reduce using rule 21 (Statement)


state 47

   20 Statement: Selection_statement .

    $default  reduce using rule 20 (Statement)


state 48

   22 Statement: Iteration_statement .

    $default  reduce using rule 22 (Statement)


state 49

   23 Statement: Print_statement .

    $default  reduce using rule 23 (Statement)


state 50

   19 Statement: Assignement_statement .

    $default  reduce using rule 19 (Statement)


state 51

   50 Declaration_list: Declaration_list Declaration_statement .

    $default  reduce using rule 50 (Declaration_list)


state 52

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 tLBRACE Corps Return_statement . tRBRACE

    tRBRACE  shift, and go to state 71


state 53

   56 Declaration_int: tID tASSIGN . Expression
   58                | tID tASSIGN . Expression @4 tCOMMA Declaration_int

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 72
    Facteur     go to state 63


state 54

   59 Declaration_int: tID tCOMMA . Declaration_int

    tID  shift, and go to state 35

    Declaration_int  go to state 73


state 55

   51 Declaration_statement: tINT Declaration_int tSEMI .

    $default  reduce using rule 51 (Declaration_statement)


state 56

   53 Declaration_const: tID . tASSIGN tNB
   54                  | tID . tASSIGN tNB tCOMMA Declaration_const

    tASSIGN  shift, and go to state 74


state 57

   52 Declaration_statement: tCONST tINT Declaration_const . tSEMI

    tSEMI  shift, and go to state 75


state 58

   75 Return_statement: tRETURN tSEMI .

    $default  reduce using rule 75 (Return_statement)


state 59

   33 Facteur: tNB .

    $default  reduce using rule 33 (Facteur)


state 60

   35 Facteur: tLPAR . Expression tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 76
    Facteur     go to state 63


state 61

   34 Facteur: tID .

    $default  reduce using rule 34 (Facteur)


state 62

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   74 Return_statement: tRETURN Expression . tSEMI

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tSEMI  shift, and go to state 81


state 63

   32 Expression: Facteur .

    $default  reduce using rule 32 (Expression)


state 64

    6 Function: Type_specifier tMAIN @2 tLPAR Parameter_list tRPAR tLBRACE Corps Return_statement tRBRACE .

    $default  reduce using rule 6 (Function)


state 65

   76 Print_statement: tPRINT tLPAR . Expression tRPAR tSEMI

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 82
    Facteur     go to state 63


state 66

   63 Selection_statement: tIF tLPAR . Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 83
    tID    shift, and go to state 61

    Expression  go to state 84
    Facteur     go to state 63
    Conditions  go to state 85
    Condition   go to state 86


state 67

   72 Iteration_statement: tWHILE tLPAR . @10 Conditions @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE

    $default  reduce using rule 68 (@10)

    @10  go to state 87


state 68

   77 Assignement_statement: tID tASSIGN . Expression tSEMI
   78                      | tID tASSIGN . Function_call tSEMI

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 88

    Function_call  go to state 89
    Expression     go to state 90
    Facteur        go to state 63


state 69

   24 Function_call: tID tLPAR . Arguments tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    $default  reduce using rule 25 (Arguments)

    Arguments   go to state 91
    Expression  go to state 92
    Facteur     go to state 63


state 70

   18 Statement_list: Statement_list Statement .

    $default  reduce using rule 18 (Statement_list)


state 71

    8 Function: Type_specifier tID tLPAR Parameter_list tRPAR @3 tLBRACE Corps Return_statement tRBRACE .

    $default  reduce using rule 8 (Function)


state 72

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   56 Declaration_int: tID tASSIGN Expression .
   58                | tID tASSIGN Expression . @4 tCOMMA Declaration_int

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    tCOMMA    reduce using rule 57 (@4)
    $default  reduce using rule 56 (Declaration_int)

    @4  go to state 93


state 73

   59 Declaration_int: tID tCOMMA Declaration_int .

    $default  reduce using rule 59 (Declaration_int)


state 74

   53 Declaration_const: tID tASSIGN . tNB
   54                  | tID tASSIGN . tNB tCOMMA Declaration_const

    tNB  shift, and go to state 94


state 75

   52 Declaration_statement: tCONST tINT Declaration_const tSEMI .

    $default  reduce using rule 52 (Declaration_statement)


state 76

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   35 Facteur: tLPAR Expression . tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tRPAR  shift, and go to state 95


state 77

   28 Expression: Expression tADD . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 96
    Facteur     go to state 63


state 78

   29 Expression: Expression tSUB . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 97
    Facteur     go to state 63


state 79

   30 Expression: Expression tMUL . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 98
    Facteur     go to state 63


state 80

   31 Expression: Expression tDIV . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 99
    Facteur     go to state 63


state 81

   74 Return_statement: tRETURN Expression tSEMI .

    $default  reduce using rule 74 (Return_statement)


state 82

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   76 Print_statement: tPRINT tLPAR Expression . tRPAR tSEMI

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tRPAR  shift, and go to state 100


state 83

   35 Facteur: tLPAR . Expression tRPAR
   38 Condition: tLPAR . Expression tLT Expression tRPAR
   39          | tLPAR . Expression tGT Expression tRPAR
   40          | tLPAR . Expression tEQ Expression tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 101
    Facteur     go to state 63


state 84

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   41 Condition: Expression . tLT Expression
   42          | Expression . tGT Expression
   43          | Expression . tEQ Expression
   44          | Expression .

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80
    tLT   shift, and go to state 102
    tGT   shift, and go to state 103
    tEQ   shift, and go to state 104

    $default  reduce using rule 44 (Condition)


state 85

   36 Conditions: Conditions . Separator Condition
   63 Selection_statement: tIF tLPAR Conditions . @5 tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement

    tAND  shift, and go to state 105
    tOR   shift, and go to state 106

    $default  reduce using rule 60 (@5)

    Separator  go to state 107
    @5         go to state 108


state 86

   37 Conditions: Condition .

    $default  reduce using rule 37 (Conditions)


state 87

   72 Iteration_statement: tWHILE tLPAR @10 . Conditions @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 83
    tID    shift, and go to state 61

    Expression  go to state 84
    Facteur     go to state 63
    Conditions  go to state 109
    Condition   go to state 86


state 88

   24 Function_call: tID . tLPAR Arguments tRPAR
   34 Facteur: tID .

    tLPAR  shift, and go to state 69

    $default  reduce using rule 34 (Facteur)


state 89

   78 Assignement_statement: tID tASSIGN Function_call . tSEMI

    tSEMI  shift, and go to state 110


state 90

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   77 Assignement_statement: tID tASSIGN Expression . tSEMI

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tSEMI  shift, and go to state 111


state 91

   24 Function_call: tID tLPAR Arguments . tRPAR

    tRPAR  shift, and go to state 112


state 92

   26 Arguments: Expression .
   27          | Expression . tCOMMA Arguments
   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression

    tADD    shift, and go to state 77
    tSUB    shift, and go to state 78
    tMUL    shift, and go to state 79
    tDIV    shift, and go to state 80
    tCOMMA  shift, and go to state 113

    $default  reduce using rule 26 (Arguments)


state 93

   58 Declaration_int: tID tASSIGN Expression @4 . tCOMMA Declaration_int

    tCOMMA  shift, and go to state 114


state 94

   53 Declaration_const: tID tASSIGN tNB .
   54                  | tID tASSIGN tNB . tCOMMA Declaration_const

    tCOMMA  shift, and go to state 115

    $default  reduce using rule 53 (Declaration_const)


state 95

   35 Facteur: tLPAR Expression tRPAR .

    $default  reduce using rule 35 (Facteur)


state 96

   28 Expression: Expression . tADD Expression
   28           | Expression tADD Expression .
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression

    $default  reduce using rule 28 (Expression)


state 97

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   29           | Expression tSUB Expression .
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression

    $default  reduce using rule 29 (Expression)


state 98

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   30           | Expression tMUL Expression .
   31           | Expression . tDIV Expression

    $default  reduce using rule 30 (Expression)


state 99

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   31           | Expression tDIV Expression .

    $default  reduce using rule 31 (Expression)


state 100

   76 Print_statement: tPRINT tLPAR Expression tRPAR . tSEMI

    tSEMI  shift, and go to state 116


state 101

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   35 Facteur: tLPAR Expression . tRPAR
   38 Condition: tLPAR Expression . tLT Expression tRPAR
   39          | tLPAR Expression . tGT Expression tRPAR
   40          | tLPAR Expression . tEQ Expression tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tLT    shift, and go to state 117
    tGT    shift, and go to state 118
    tEQ    shift, and go to state 119
    tRPAR  shift, and go to state 95


state 102

   41 Condition: Expression tLT . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 120
    Facteur     go to state 63


state 103

   42 Condition: Expression tGT . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 121
    Facteur     go to state 63


state 104

   43 Condition: Expression tEQ . Expression

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 122
    Facteur     go to state 63


state 105

   45 Separator: tAND .

    $default  reduce using rule 45 (Separator)


state 106

   46 Separator: tOR .

    $default  reduce using rule 46 (Separator)


state 107

   36 Conditions: Conditions Separator . Condition

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 83
    tID    shift, and go to state 61

    Expression  go to state 84
    Facteur     go to state 63
    Condition   go to state 123


state 108

   63 Selection_statement: tIF tLPAR Conditions @5 . tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement

    tRPAR  shift, and go to state 124


state 109

   36 Conditions: Conditions . Separator Condition
   72 Iteration_statement: tWHILE tLPAR @10 Conditions . @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE

    tAND  shift, and go to state 105
    tOR   shift, and go to state 106

    $default  reduce using rule 69 (@11)

    Separator  go to state 107
    @11        go to state 125


state 110

   78 Assignement_statement: tID tASSIGN Function_call tSEMI .

    $default  reduce using rule 78 (Assignement_statement)


state 111

   77 Assignement_statement: tID tASSIGN Expression tSEMI .

    $default  reduce using rule 77 (Assignement_statement)


state 112

   24 Function_call: tID tLPAR Arguments tRPAR .

    $default  reduce using rule 24 (Function_call)


state 113

   27 Arguments: Expression tCOMMA . Arguments

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    $default  reduce using rule 25 (Arguments)

    Arguments   go to state 126
    Expression  go to state 92
    Facteur     go to state 63


state 114

   58 Declaration_int: tID tASSIGN Expression @4 tCOMMA . Declaration_int

    tID  shift, and go to state 35

    Declaration_int  go to state 127


state 115

   54 Declaration_const: tID tASSIGN tNB tCOMMA . Declaration_const

    tID  shift, and go to state 56

    Declaration_const  go to state 128


state 116

   76 Print_statement: tPRINT tLPAR Expression tRPAR tSEMI .

    $default  reduce using rule 76 (Print_statement)


state 117

   38 Condition: tLPAR Expression tLT . Expression tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 129
    Facteur     go to state 63


state 118

   39 Condition: tLPAR Expression tGT . Expression tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 130
    Facteur     go to state 63


state 119

   40 Condition: tLPAR Expression tEQ . Expression tRPAR

    tNB    shift, and go to state 59
    tLPAR  shift, and go to state 60
    tID    shift, and go to state 61

    Expression  go to state 131
    Facteur     go to state 63


state 120

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   41 Condition: Expression tLT Expression .

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 41 (Condition)


state 121

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   42 Condition: Expression tGT Expression .

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 42 (Condition)


state 122

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   43 Condition: Expression tEQ Expression .

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tMUL  shift, and go to state 79
    tDIV  shift, and go to state 80

    $default  reduce using rule 43 (Condition)


state 123

   36 Conditions: Conditions Separator Condition .

    $default  reduce using rule 36 (Conditions)


state 124

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR . tLBRACE @6 Corps tRBRACE @7 Else_statement

    tLBRACE  shift, and go to state 132


state 125

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 . tRPAR tLBRACE @12 Statement_list @13 tRBRACE

    tRPAR  shift, and go to state 133


state 126

   27 Arguments: Expression tCOMMA Arguments .

    $default  reduce using rule 27 (Arguments)


state 127

   58 Declaration_int: tID tASSIGN Expression @4 tCOMMA Declaration_int .

    $default  reduce using rule 58 (Declaration_int)


state 128

   54 Declaration_const: tID tASSIGN tNB tCOMMA Declaration_const .

    $default  reduce using rule 54 (Declaration_const)


state 129

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   38 Condition: tLPAR Expression tLT Expression . tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tRPAR  shift, and go to state 134


state 130

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   39 Condition: tLPAR Expression tGT Expression . tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tRPAR  shift, and go to state 135


state 131

   28 Expression: Expression . tADD Expression
   29           | Expression . tSUB Expression
   30           | Expression . tMUL Expression
   31           | Expression . tDIV Expression
   40 Condition: tLPAR Expression tEQ Expression . tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tMUL   shift, and go to state 79
    tDIV   shift, and go to state 80
    tRPAR  shift, and go to state 136


state 132

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE . @6 Corps tRBRACE @7 Else_statement

    $default  reduce using rule 61 (@6)

    @6  go to state 137


state 133

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR . tLBRACE @12 Statement_list @13 tRBRACE

    tLBRACE  shift, and go to state 138


state 134

   38 Condition: tLPAR Expression tLT Expression tRPAR .

    $default  reduce using rule 38 (Condition)


state 135

   39 Condition: tLPAR Expression tGT Expression tRPAR .

    $default  reduce using rule 39 (Condition)


state 136

   40 Condition: tLPAR Expression tEQ Expression tRPAR .

    $default  reduce using rule 40 (Condition)


state 137

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 . Corps tRBRACE @7 Else_statement

    tINT    shift, and go to state 28
    tCONST  shift, and go to state 29

    $default  reduce using rule 47 (Declarations)

    Corps                  go to state 139
    Declarations           go to state 31
    Declaration_list       go to state 32
    Declaration_statement  go to state 33


state 138

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE . @12 Statement_list @13 tRBRACE

    $default  reduce using rule 70 (@12)

    @12  go to state 140


state 139

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 Corps . tRBRACE @7 Else_statement

    tRBRACE  shift, and go to state 141


state 140

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE @12 . Statement_list @13 tRBRACE

    tPRINT  shift, and go to state 40
    tIF     shift, and go to state 41
    tWHILE  shift, and go to state 42
    tID     shift, and go to state 43

    Statement_list         go to state 142
    Statement              go to state 45
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 141

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE . @7 Else_statement

    $default  reduce using rule 62 (@7)

    @7  go to state 143


state 142

   18 Statement_list: Statement_list . Statement
   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE @12 Statement_list . @13 tRBRACE

    tPRINT  shift, and go to state 40
    tIF     shift, and go to state 41
    tWHILE  shift, and go to state 42
    tID     shift, and go to state 43

    $default  reduce using rule 71 (@13)

    Statement              go to state 70
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    @13                    go to state 144
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 143

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE @7 . Else_statement

    tELSE  shift, and go to state 145

    $default  reduce using rule 67 (Else_statement)

    Else_statement  go to state 146


state 144

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE @12 Statement_list @13 . tRBRACE

    tRBRACE  shift, and go to state 147


state 145

   66 Else_statement: tELSE . @8 tLBRACE @9 Statement_list tRBRACE

    $default  reduce using rule 64 (@8)

    @8  go to state 148


state 146

   63 Selection_statement: tIF tLPAR Conditions @5 tRPAR tLBRACE @6 Corps tRBRACE @7 Else_statement .

    $default  reduce using rule 63 (Selection_statement)


state 147

   72 Iteration_statement: tWHILE tLPAR @10 Conditions @11 tRPAR tLBRACE @12 Statement_list @13 tRBRACE .

    $default  reduce using rule 72 (Iteration_statement)


state 148

   66 Else_statement: tELSE @8 . tLBRACE @9 Statement_list tRBRACE

    tLBRACE  shift, and go to state 149


state 149

   66 Else_statement: tELSE @8 tLBRACE . @9 Statement_list tRBRACE

    $default  reduce using rule 65 (@9)

    @9  go to state 150


state 150

   66 Else_statement: tELSE @8 tLBRACE @9 . Statement_list tRBRACE

    tPRINT  shift, and go to state 40
    tIF     shift, and go to state 41
    tWHILE  shift, and go to state 42
    tID     shift, and go to state 43

    Statement_list         go to state 151
    Statement              go to state 45
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 151

   18 Statement_list: Statement_list . Statement
   66 Else_statement: tELSE @8 tLBRACE @9 Statement_list . tRBRACE

    tPRINT   shift, and go to state 40
    tRBRACE  shift, and go to state 152
    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tID      shift, and go to state 43

    Statement              go to state 70
    Function_call          go to state 46
    Selection_statement    go to state 47
    Iteration_statement    go to state 48
    Print_statement        go to state 49
    Assignement_statement  go to state 50


state 152

   66 Else_statement: tELSE @8 tLBRACE @9 Statement_list tRBRACE .

    $default  reduce using rule 66 (Else_statement)
